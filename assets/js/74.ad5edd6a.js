(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{450:function(e,t,v){"use strict";v.r(t);var _=v(42),r=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"基本"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本"}},[e._v("#")]),e._v(" 基本")]),e._v(" "),v("h2",{attrs:{id:"css作用域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css作用域"}},[e._v("#")]),e._v(" CSS作用域")]),e._v(" "),v("ul",[v("li",[e._v("添加scoped约束当前组件的样式只能作用在当前组件，不对子孙组件起作用。不过可以使用 deep 深度作用样式到子孙组件。")]),e._v(" "),v("li",[e._v("利用深度作用使子组件都可以使用父组件的样式。 "),v("code",[e._v("/deep/ .login-item {}")]),e._v("。")])]),e._v(" "),v("h2",{attrs:{id:"route-和-router"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#route-和-router"}},[e._v("#")]),e._v(" $route 和 $router")]),e._v(" "),v("ul",[v("li",[e._v("$route是“路由信息对象”，包括path，params，hash，query，fullPath，matched，name等路由信息参数。")]),e._v(" "),v("li",[e._v("$router是“路由实例”对象包括了路由的跳转方法，钩子函数等。")])]),e._v(" "),v("h2",{attrs:{id:"修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[e._v("#")]),e._v(" 修饰符")]),e._v(" "),v("ul",[v("li",[e._v("lazy：延迟更新。比如输入框数据，使用lazy会等光标离开后才会做出相应的响应。")]),e._v(" "),v("li",[e._v("trim：去除左右两边的空格")]),e._v(" "),v("li",[e._v("number：限制输入的东西是数字。如果你先输入数字，那它就会限制你输入的只能是数字。如果你先输入字符串，那它就相当于没有加.number")]),e._v(" "),v("li",[e._v("stop: 阻止冒泡")]),e._v(" "),v("li",[e._v("prevent: 阻止默认行为")]),e._v(" "),v("li",[e._v("self： 只当事件是从事件绑定的元素本身触发时才触发回调。")]),e._v(" "),v("li",[e._v("once: 只触发一次。")]),e._v(" "),v("li",[e._v("capture: 使用捕获机制")]),e._v(" "),v("li",[e._v("passive:")]),e._v(" "),v("li",[e._v("native:  把一个vue组件转化为一个普通的标签，从而可以触发原始的监听事件如click等。")]),e._v(" "),v("li",[e._v("sync：props双向数据绑定")]),e._v(" "),v("li",[e._v("left 左键点击")]),e._v(" "),v("li",[e._v("right 右键点击")]),e._v(" "),v("li",[e._v("middle 中键点击")]),e._v(" "),v("li",[e._v("keyCode")])]),e._v(" "),v("h2",{attrs:{id:"key"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[e._v("#")]),e._v(" key")]),e._v(" "),v("ul",[v("li",[e._v("使用v-for更新已渲染的元素列表时，默认用就地复用策略。列表数据修改的时候，会根据key值去判断某个值是否修改，如果修改则重新渲染这一项，否则复用之前的元素。")]),e._v(" "),v("li",[e._v("通常使用index来作为key，但这有时候还是会重新渲染其他数据或是会出错。比如在列表中删除一项时，因为index-1了，所以实际上删除的会是列表中最后一项。或者在列表中插入一项时，会导致后面的index也改变了，会重新渲染。所以应该尽量避免使用index作为key，而是使用id等一些不会改变的字符串或数字。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);