(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{497:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("h2",{attrs:{id:"行内元素与块级元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素与块级元素"}},[t._v("#")]),t._v(" 行内元素与块级元素")]),t._v(" "),s("ol",[s("li",[t._v("格式上，行内元素不会以新行开始，而块级元素会新起一行。")]),t._v(" "),s("li",[t._v("内容上，行内元素只能包含文本和其他行内元素，而块级元素可以包含行内元素和其他块级元素。")]),t._v(" "),s("li",[t._v("行内元素设置 width 和 height 无效，设置 margin 和 padding 的上下间距不会对其他元素产生影响。。")])]),t._v(" "),s("h2",{attrs:{id:"position"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" position")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("fixed")]),t._v(" 定位没有指定 "),s("code",[t._v("top")]),t._v(" 和 "),s("code",[t._v("left")]),t._v("，那么 "),s("code",[t._v("fixed")]),t._v(" 定位的元素此时不会相对于屏幕，而是相对于它的父元素定位的。")]),t._v(" "),s("h2",{attrs:{id:"display-和-visibility"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-和-visibility"}},[t._v("#")]),t._v(" display 和 visibility")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("display: none")]),t._v(" 和 "),s("code",[t._v("visibility: hidden")]),t._v(" 的区别\n"),s("ul",[s("li",[s("code",[t._v("display: none")]),t._v(" 不会渲染出来，也就不会在文档流中占据空间。")]),t._v(" "),s("li",[s("code",[t._v("visibility: hidden")]),t._v(" 是继承属性，即使父节点设置了隐藏，但给子节点设置 "),s("code",[t._v("visibility: visible")]),t._v(" 还是可以让子节点显示出来。")]),t._v(" "),s("li",[t._v("重排重绘（性能，以此决定是用哪个）。（"),s("code",[t._v("display：none")]),t._v(" 还是会出现在 DOM 树中，"),s("code",[t._v("v-if")]),t._v(" 则不会出现在 DOM 树中）")])])])]),t._v(" "),s("h2",{attrs:{id:"transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" transform")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("任何非 none值 的 transform 会导致创建一个堆栈上下文和包含块。所以如果父级元素设置了 transform 属性，"),s("code",[t._v("position: relative/absolute/fixed")]),t._v(" 会基于此定位而非它第一个带定位的父元素，同样子元素的宽高如果设置为百分比的话也是基于它计算。")]),t._v(" "),s("ul",[s("li",[t._v("一个元素是先 "),s("code",[t._v("transform: translate(100px,100px)")]),t._v("，还是先 "),s("code",[t._v("rotate(45deg)")]),t._v("，这两者是有区别的。因为 "),s("code",[t._v("rotate")]),t._v(" 会旋转 x 轴和 y 轴，所以两者的效果是不一样的。")])])])]),t._v(" "),s("h2",{attrs:{id:"opacity-和-alpha"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#opacity-和-alpha"}},[t._v("#")]),t._v(" opacity 和 alpha")]),t._v(" "),s("p",[t._v("0.5 的 opacity 和 0.5 的 alpha 是不同的。单独作用的时候，opacity 会作用到元素的整体上，即 border 等都会相应地变透明。而 alpha 只会作用到相关的某个属性。如果两者都作用到一个元素上，则实际效果会比单独作用的 0.5 更浅。")]),t._v(" "),s("h2",{attrs:{id:"pointer-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pointer-events"}},[t._v("#")]),t._v(" pointer-events")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("pointer-events:none")]),t._v(" 禁用事件触发(默认事件、冒泡事件、鼠标事件、键盘事件等)，相当于 "),s("code",[t._v("<button>")]),t._v(" 的 disabled。")]),t._v(" "),s("h2",{attrs:{id:"link-和-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-和-import"}},[t._v("#")]),t._v(" link 和 @import")]),t._v(" "),s("ul",[s("li",[t._v("外联式和导入式的区别：\n"),s("ul",[s("li",[t._v("link 属于 html 标签，除了可以加载 css 外，还可以用来设置网页图标、DNS 预解析等。而 "),s("code",[t._v("@import")]),t._v(" 属于 css，只能加载 css，且必须写在 style 样式表头部。")]),t._v(" "),s("li",[t._v("加载顺序的差别：当一个页面被加载的时候（就是被浏览者浏览的时候），link 引用的 CSS 文件会同时被加载，而 "),s("code",[t._v("@import")]),t._v(" 引用的 CSS 文件会等到引用它的那个文件加载解析完毕后才会去加载和解析。")]),t._v(" "),s("li",[t._v("兼容性的差别："),s("code",[t._v("@import")]),t._v(" 是 CSS2.1 提出的，所以老的浏览器不支持，只在 IE5 以上的才能识别，而 link 标签无此问题。")]),t._v(" "),s("li",[t._v("使用DOM控制样式差别：当使用 javascript 控制 DOM 去改变样式的时候，只能使用 link 标签，因为 "),s("code",[t._v("@import")]),t._v(" 不是 DOM 可以控制的.（"),s("code",[t._v("@import")]),t._v(" 好像也可以吧）")])])])]),t._v(" "),s("h2",{attrs:{id:"picture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#picture"}},[t._v("#")]),t._v(" picture")]),t._v(" "),s("p",[t._v("picture 是 HTML5 新引入的标签，基本用法如下。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("picture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("srcset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("srcset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("b.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("c.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("picture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("我们可以这样理解，picture 标签会从 source 中选择最合适的一个，然后将它的 URL 赋值给 img。对于不认识 picture 的旧浏览器，他们会忽略 picture，只渲染 img。")]),t._v(" "),s("p",[t._v("注意：picture 标签最后一定要包含一个 img 标签，否则，什么都不会显示。")]),t._v(" "),s("p",[t._v("可以通过 source 标签的 media、type 指定要匹配的屏幕大小和图片类型，可以根据显示器的 DPI 选择不同的图片。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("<img srcset="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img-200.jpg, img-300.jpg 1.5x, img-400.jpg 2x"')]),t._v(' src="img-400.jpg” >\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);